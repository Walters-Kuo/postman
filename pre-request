
//get JWT payload
function parseJwt(token) {
    var base64Url = token.split('.')[1];
    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {
        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
    }).join(''));

    return JSON.parse(jsonPayload);
};

//get auth0 token
const loginRequest = {
    url: pm.environment.get("auth0_endpoint") + '/oauth/token',
    method: 'POST',
    header: 'Content-Type: application/json',
    body: {
        mode: 'application/json',
        raw: JSON.stringify({
            "grant_type": pm.environment.get("grant_type"),
            "client_id": pm.environment.get("client_id"),
            "client_secret": pm.environment.get("client_secret"),
            "username": pm.environment.get("username"),
            "password": pm.environment.get("password"),
            "scope": pm.environment.get("scope"),
            "audience": pm.environment.get("audience")
        })
    }
};

//check collection environment 
if (!pm.environment.get('access_token_expiry') || !pm.environment.get('access_token') || (pm.environment.get('access_token_expiry') <= (new Date()).getTime())) {

    console.log('Token is expired');

    pm.sendRequest(loginRequest, function (err, response) {
        if (err) {
            console.log(err);
            throw 'auth0 login fail';
        }

        var data = response.json();
        if (response.code === 200) {
            console.log('Status 200');

            pm.environment.set("access_token", data.access_token);
            pm.environment.set("refresh_token", data.refresh_token);
            pm.environment.set("id_token", data.id_token);

            //console.log("access_token = " + data.access_token);
            var de_token = parseJwt(data.access_token);
        
            if (de_token['username']) {
                pm.environment.set("jwt_username", de_token['username']);
            }

            if (de_token['nickname']) {
                pm.environment.set("jwt_nickname", de_token['nickname']);
            }
            pm.environment.set("jwt_user_id", de_token['sub']);
            pm.environment.set("access_token_expiry", de_token['exp'] + "000");
        }
    });
}
